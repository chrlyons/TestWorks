name: TestWorks CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - '.idea/**'
      - '.run/**'
      - '.vscode/**'
      - 'README.md'
      - '.gitattributes'
      - '.gitignore'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - '.idea/**'
      - '.run/**'
      - '.vscode/**'
      - 'README.md'
      - '.gitattributes'
      - '.gitignore'
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: '3.10'
      DATABASE_URL: 'postgresql://testuser:testpassword@localhost:5432/test'
      ALGORITHM: ${{ secrets.TEST_ALGORITHM }}
      SECRET_KEY: "1<3TwoTestThings!123456789"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Start Docker Compose services
        run: |
          docker compose -f test.yml up -d
          sleep 10

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Install backend dependencies
        run: |
          poetry install
          poetry run playwright install chromium

      - name: Run Pytest with Coverage for Unit/Integration/E2E Tests
        continue-on-error: true
        run: |
          poetry run pytest -m "unit" --cov=backend --cov-report xml:coverage-unit.xml --junitxml=unit-tests.xml || true
          poetry run pytest -m "integration" --cov=backend --cov-report xml:coverage-integration.xml --junitxml=integration-tests.xml || true
          poetry run pytest -m "e2e" --cov=backend --cov-report xml:coverage-e2e.xml --junitxml=e2e-tests.xml || true

      - name: Generate Test Report
        uses: dorny/test-reporter@v1
        continue-on-error: true
        if: always()
        with:
          name: PyTest Report
          path: ./*-tests.xml
          reporter: java-junit

      - name: Publish coverage reports to Code Climate
        uses: paambaati/codeclimate-action@v5
        if: always()
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          debug: true
          coverageLocations: |
            ./coverage-unit.xml:cobertura
            ./coverage-integration.xml:cobertura
            ./coverage-e2e.xml:cobertura

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage-unit.xml,./coverage-integration.xml,./coverage-e2e.xml
          name: codecov-pytest
          slug: chrlyons/testworks

      - name: Shutdown Docker Compose services
        if: always()
        run: |
          docker compose -f test.yml down

permissions:
  contents: read
  actions: read
  checks: write
